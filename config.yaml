# Конфигурация для simple_etl_pipeline

# Конфиг логирования
log_config:
  log_path: "logs/"

# Sqlite конфиг
sqlite_config:
  db_name: "synth_sqlite_database.db"
  db_path: "data/"
  predefined_queries:
    get_all_users: "SELECT * FROM users;"
    top_10_transactions: "SELECT * FROM transactions ORDER BY amount DESC LIMIT 10;"
    recent_logs: "SELECT * FROM logs WHERE timestamp >= DATE('now', '-7 day');"
    active_users_orders: >
      SELECT u.name, o.id, o.status, o.timestamp
      FROM users u
      JOIN orders o ON u.id = o.user_id
      WHERE o.status = 'COMPLETED';
    product_popularity: >
      SELECT p.name, COUNT(o.id) AS total_orders
      FROM products p
      JOIN orders o ON p.id = o.product_id
      GROUP BY p.name
      ORDER BY total_orders DESC
      LIMIT 5;

sqlite_tables:
  - name: users
    num_rows: 2500
    columns:
      - id: INTEGER PRIMARY KEY AUTOINCREMENT
      - name: TEXT
      - age: INTEGER
      - phone: TEXT
      - email: TEXT
      - country: TEXT
      - reg_date: TEXT
  - name: products
    num_rows: 5000
    columns:
      - id: INTEGER PRIMARY KEY AUTOINCREMENT
      - name: TEXT
      - category: TEXT
      - price: REAL
  - name: logs
    num_rows: 100000
    columns:
      - id: INTEGER PRIMARY KEY AUTOINCREMENT
      - severity: TEXT
      - error_message: TEXT
      - timestamp: TEXT
  - name: transactions
    num_rows: 100000
    columns:
      - user_id: INTEGER
      - amount: REAL
      - date: TEXT
      - description: TEXT
      - status: TEXT
    constraints:
      - PRIMARY KEY (user_id, date)
      - FOREIGN KEY (user_id) REFERENCES users(id)
  - name: user_actions
    num_rows: 50000
    columns:
      - user_id: INTEGER
      - action: TEXT
      - timestamp: TEXT
    constraints:
      - PRIMARY KEY (user_id, timestamp)
      - FOREIGN KEY (user_id) REFERENCES users(id)
  - name: orders
    num_rows: 10000
    columns:
      - id: INTEGER PRIMARY KEY AUTOINCREMENT
      - user_id: INTEGER
      - product_id: INTEGER
      - purchase_date: TEXT
      - status: TEXT
      - amount: REAL
    constraints:
      - FOREIGN KEY (user_id) REFERENCES users(id)
      - FOREIGN KEY (product_id) REFERENCES products(id)

# CSV конфиг
csv_config:
  filename: employees_synth_data.csv
  num_rows: 10000
  headers: ['ID', 'NAME', 'AGE', 'PHONE', 'EMAIL', 'COUNTRY', 'HIRE_DATE', 'DEPARTMENT', 'JOB_TITLE', 'SALARY']


# Источники данных
data_sources:
  api: {url: "https://api.example.com/data",
          method: GET,
          params: {param1: value1, param2: value2},
          headers:{
            Authorization: "Bearer YOUR_API_KEY",
            Accept: "application/json",
            Content-Type: "application/json"
            }
            }

  csv: "data" # Путь к CSV файлам

  sqlite: "data" # Путь к SQLite файлам

# Конфиг обработки данных
transformations:
  clean_data:
    type: drop_nulls
    columns: "*"  # "*" — все столбцы, либо ["col1", "col2"]

  remove_duplicates:
    type: drop_duplicates
    columns: "*"

# Конфиг дата валидатора
validation:
  foreign_keys:
    orders:
      user_id: users
      product_id: products
    transactions:
      user_id: users
    user_actions:
      user_id: users
  composite_keys:
    user_actions:
      - ["user_id", "timestamp"]
  
  
  constraints:
    rules:
      age: "age > 0 and age < 100"
      email: "email.str.contains(r'^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$', na=False)"
      price: "price > 0"
      severity: "severity.isin(['INFO', 'WARNING', 'ERROR', 'CRITICAL'])"
      transaction_status: "status.isin(['PENDING', 'COMPLETED', 'FAILED', 'CANCELLED'])"
      order_status: "status.isin(['PENDING', 'SHIPPED', 'DELIVERED', 'RETURNED', 'COMPLETED', 'CANCELLED'])"
      amount: "amount > 0"

profiling:
  enabled: true
  reports_path: ./reports/profiling/
  stats:
    - count
    - mean
    - median
    - std
    - missing_values
  detailed: false

load_config:
  sqlite:
    db_name: "result_sqlite_database.db"
    db_path: "db/"
    table_name: "employees"
    if_exists: "replace"
  clickhouse:
    host: your-ch-host.com
    port: 9440
    user: default
    password: your_password
    secure: true
  postgres:
    host: localhost
    port: 5432
    user: your_user
    password: your_password
    database: your_database

# Наборы слов для генерации названий товаров
word_lists:
  products: [
    "Smart LED TV",
    "Wireless Headphones",
    "Gaming Laptop",
    "Coffee Maker",
    "Robot Vacuum",
    "Fitness Tracker", 
    "Digital Camera",
    "Blender",
    "Air Purifier",
    "Electric Toothbrush",
    "Portable Speaker",
    "Microwave Oven",
    "Tablet Computer",
    "Security Camera",
    "Electric Kettle",
    "Hair Dryer",
    "Smartwatch",
    "Air Fryer",
    "Bluetooth Earbuds",
    "Food Processor",
    "Smart Doorbell",
    "Electric Scooter",
    "Desk Lamp",
    "Wireless Mouse",
    "Mechanical Keyboard",
    "Power Bank",
    "Smart Scale",
    "Rice Cooker",
    "Dash Cam",
    "Electric Fan",
    "Wireless Charger",
    "Gaming Console",
    "External SSD",
    "Smart Thermostat",
    "Instant Pot",
    "Noise Cancelling Headphones",
    "Drone Camera",
    "Electric Toaster",
    "Smart Light Bulbs",
    "Wireless Router",
    "Handheld Vacuum",
    "Smart Display",
    "Electric Shaver",
    "Portable Monitor",
    "Smart Plug",
    "Action Camera",
    "Electric Blanket",
    "Wireless Printer",
    "Smart Lock",
    "Portable Projector"
    ]  
  models: ['Model 1', 'Model 2', 'Model 3', 'Model 4', 'Model 5',
          'Model 6', 'Model 7', 'Model 8', 'Model 9', 'Model 10']
  colors: ['White', 'Yellow', 'Black', 'Red', 'Blue', 
           'Green', 'Purple', 'Orange', 'Pink', 'Brown', 
           'Gray', 'Silver', 'Gold', 'Violet', 'Bronze']
  categories: ["Electronics", "Furniture", "Clothing", "Kitchenware", "Toys",
               "Books", "Sports", "Beauty", "Automotive", "Gardening", "Health",
               "Office Supplies", "Pet Supplies", "Jewelry", "Watches", "Footwear", "Bags"]
  order_status:  ['PENDING', 'SHIPPED', 'DELIVERED', 'RETURNED', 'COMPLETED', 'CANCELLED']
  actions: ["LOGIN", "LOGOUT", "PURCHASE", "ADD_TO_CART", "REMOVE_FROM_CART", 
            "SEARCH", "VIEW_PRODUCT", "CHECKOUT", "UPDATE_PROFILE", "SUBSCRIBE"]
  status: ['PENDING', 'COMPLETED', 'FAILED', 'CANCELLED']
  log_messages: {
    "INFO": ["Operation completed successfully.", "User logged in.",
             "Data saved to database.", "File uploaded successfully.",
             "Connection established."],
    "WARNING": ["Low disk space.", "High memory usage.", "Unresponsive script.",
                "Deprecated API usage.", "Slow response time."],
    "ERROR": ["File not found.", "Database connection failed.", "Invalid input data.",
              "Permission denied.", "Network error."],
    "CRITICAL": ["System crash.", "Data corruption detected.", "Security breach.",
                 "Service unavailable.", "Critical hardware failure."]
  }
  transaction_desc: ["Payment for subscription", "Refund for canceled subscription", 
                     "Payment for product purchase", "Refund for canceled product purchase",
                     "Payment for service", "Refund for canceled service",
                     "Payment for product return", "Payment for product exchange"]